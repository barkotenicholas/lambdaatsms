name : Deploy lambda

on:
  push:
    branches:
     - main

jobs:
  deploy:

    name: deploy to aws
    runs-on: ubuntu-latest

    env:
      NODE_VERSION: 14.x

    strategy:
      matrix:
        python-version:
          - 3.8
    
    steps:
      - uses : actions/checkout@v2
      - name : Set Up Python ${{ matrix.python-version }}
        uses : actions/setup-python@v2
        with :
          python-version : ${{ matrix.python-version }}
      
      - name : cache pip
        uses : actions/cache@v2
        with :
          path : ~/.cache/pip
          key : ${{ runner.os }}-pip-${{hashFiles('requirements.txt')}}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-
      - name : Install dependency 
        run : |
              python -m install --upgrade pip
              pip install flake8 pytest
              if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name : use Node.js ${{ env.NODE_VERSION}}
        uses : actions/setup-node@v1
        with : 
          node-version: ${{ env.NODE_VERSION}}
      - name : cache node modules
        uses : actions/cache@v2
        env :
          cache-name : cache-node-modules
        with :
          path : ~/.npm
          key : ${{ runner.os }}-build-${{env.cache-name}}-${{hashFiles('**/package-lock.js')}}
          restore-keys : |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Node dependencies (specifically, serverless-python-requirements)
        run: npm install   
      - name: Serverless Deploy
        uses: dhollerbach/github-action-serverless-with-python-requirements@master
        env:
          # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
          # or if using AWS credentials directly
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}          

     